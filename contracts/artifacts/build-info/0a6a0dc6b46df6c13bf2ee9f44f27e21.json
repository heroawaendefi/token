{
	"id": "0a6a0dc6b46df6c13bf2ee9f44f27e21",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HatToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\nimport \"./IBEP20.sol\";\r\n\r\ncontract HatToken is Context, IBEP20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    uint8 public constant DECIMALS = 18;\r\n    uint256 public constant DECIMAL_MULTIPLIER = 10**DECIMALS;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint256 private _totalSupply;\r\n\r\n    constructor() {\r\n        _name = \"Hero Awaken Token\";\r\n        _symbol = \"HAT\";\r\n\r\n        _totalSupply = (10**9) * DECIMAL_MULTIPLIER;\r\n        _balances[_msgSender()] = _totalSupply;\r\n\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external pure returns (uint8) {\r\n        return DECIMALS;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: burn amount exceeds allowance\"\r\n            )\r\n        );\r\n    }\r\n}\r\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.11;\r\n\r\ninterface IBEP20 {\r\n    \r\n\r\n\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HatToken.sol": {
				"HatToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DECIMAL_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HatToken.sol\":257:9297  contract HatToken is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HatToken.sol\":674:931  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/HatToken.sol\":699:726  _name = \"Hero Awaken Token\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x11\n  dup1\n  dup3\n  mstore\n  shl(0x79, 0x2432b9379020bbb0b5b2b7102a37b5b2b7)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"contracts/HatToken.sol\":699:704  _name */\n  0x03\n  swap2\n    /* \"contracts/HatToken.sol\":699:726  _name = \"Hero Awaken Token\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/HatToken.sol\":737:752  _symbol = \"HAT\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x03\n  dup1\n  dup3\n  mstore\n  shl(0xea, 0x121055)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"contracts/HatToken.sol\":737:744  _symbol */\n  0x04\n  swap2\n    /* \"contracts/HatToken.sol\":737:752  _symbol = \"HAT\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/HatToken.sol\":432:444  10**DECIMALS */\n  tag_13\n    /* \"contracts/HatToken.sol\":378:380  18 */\n  0x12\n    /* \"contracts/HatToken.sol\":432:434  10 */\n  0x0a\n    /* \"contracts/HatToken.sol\":432:444  10**DECIMALS */\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/HatToken.sol\":780:808  (10**9) * DECIMAL_MULTIPLIER */\n  tag_15\n  swap1\n    /* \"contracts/HatToken.sol\":781:786  10**9 */\n  0x3b9aca00\n    /* \"contracts/HatToken.sol\":780:808  (10**9) * DECIMAL_MULTIPLIER */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/HatToken.sol\":765:777  _totalSupply */\n  0x05\n    /* \"contracts/HatToken.sol\":765:808  _totalSupply = (10**9) * DECIMAL_MULTIPLIER */\n  dup2\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/HatToken.sol\":819:842  _balances[_msgSender()] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/HatToken.sol\":819:828  _balances */\n  0x01\n    /* \"contracts/HatToken.sol\":819:842  _balances[_msgSender()] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/HatToken.sol\":819:857  _balances[_msgSender()] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/HatToken.sol\":875:923  Transfer(address(0), _msgSender(), _totalSupply) */\n  mload\n    /* \"#utility.yul\":1848:1873   */\n  swap4\n  dup5\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  swap2\n  swap3\n    /* \"contracts/HatToken.sol\":819:842  _balances[_msgSender()] */\n  swap1\n  swap2\n    /* \"contracts/HatToken.sol\":875:923  Transfer(address(0), _msgSender(), _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":1821:1839   */\n  add\n    /* \"contracts/HatToken.sol\":875:923  Transfer(address(0), _msgSender(), _totalSupply) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/HatToken.sol\":257:9297  contract HatToken is Context, IBEP20, Ownable {... */\n  jump(tag_38)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/HatToken.sol\":257:9297  contract HatToken is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_27\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_30)\ntag_27:\n  dup3\n  0x1f\n  lt\n  tag_28\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_30)\ntag_28:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  dup3\n  add\ntag_29:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_30\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_29)\ntag_30:\n  pop\n  tag_31\n  swap3\n  swap2\n  pop\n  tag_32\n  jump\t// in\ntag_31:\n  pop\n  swap1\n  jump\t// out\ntag_32:\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_33)\n    /* \"#utility.yul\":14:141   */\ntag_35:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_36:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_41:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_45\n  tag_35\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_46:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_37:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_47)\n    /* \"#utility.yul\":642:722   */\ntag_48:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_47)\n    /* \"#utility.yul\":731:807   */\ntag_49:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_52\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_50)\n    /* \"#utility.yul\":836:895   */\ntag_51:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_47)\n    /* \"#utility.yul\":904:1034   */\ntag_52:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_54\n  tag_35\n  jump\t// in\ntag_54:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_47)\n    /* \"#utility.yul\":816:1034   */\ntag_50:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_47)\n    /* \"#utility.yul\":1043:1202   */\ntag_55:\n    /* \"#utility.yul\":1234:1268   */\n  tag_56\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_36\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_58\n  tag_35\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":573:1379   */\ntag_47:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1524   */\ntag_14:\n    /* \"#utility.yul\":1442:1447   */\n  0x00\n    /* \"#utility.yul\":1471:1518   */\n  tag_60\n    /* \"#utility.yul\":1512:1516   */\n  0xff\n    /* \"#utility.yul\":1502:1510   */\n  dup5\n    /* \"#utility.yul\":1498:1517   */\n  and\n    /* \"#utility.yul\":1492:1496   */\n  dup4\n    /* \"#utility.yul\":1471:1518   */\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1462:1518   */\n  swap4\n    /* \"#utility.yul\":1384:1524   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1529:1697   */\ntag_16:\n    /* \"#utility.yul\":1569:1576   */\n  0x00\n    /* \"#utility.yul\":1635:1636   */\n  dup2\n    /* \"#utility.yul\":1631:1632   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  not\n    /* \"#utility.yul\":1623:1637   */\n  div\n    /* \"#utility.yul\":1620:1621   */\n  dup4\n    /* \"#utility.yul\":1617:1638   */\n  gt\n    /* \"#utility.yul\":1612:1613   */\n  dup3\n    /* \"#utility.yul\":1605:1614   */\n  iszero\n    /* \"#utility.yul\":1598:1615   */\n  iszero\n    /* \"#utility.yul\":1594:1639   */\n  and\n    /* \"#utility.yul\":1591:1662   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1642:1660   */\n  tag_63\n  tag_35\n  jump\t// in\ntag_63:\n  pop\n    /* \"#utility.yul\":1682:1691   */\n  mul\n  swap1\n    /* \"#utility.yul\":1529:1697   */\n  jump\t// out\n    /* \"#utility.yul\":1884:2264   */\ntag_25:\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1959:1971   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2006:2018   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2027:2088   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2081:2085   */\n  0x7f\n    /* \"#utility.yul\":2073:2079   */\n  dup3\n    /* \"#utility.yul\":2069:2086   */\n  and\n    /* \"#utility.yul\":2059:2086   */\n  swap2\n  pop\n    /* \"#utility.yul\":2027:2088   */\ntag_66:\n    /* \"#utility.yul\":2134:2136   */\n  0x20\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2123:2137   */\n  lt\n    /* \"#utility.yul\":2103:2121   */\n  dup2\n    /* \"#utility.yul\":2100:2138   */\n  eq\n    /* \"#utility.yul\":2097:2258   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2180:2190   */\n  0x4e487b71\n    /* \"#utility.yul\":2175:2178   */\n  0xe0\n    /* \"#utility.yul\":2171:2191   */\n  shl\n    /* \"#utility.yul\":2168:2169   */\n  0x00\n    /* \"#utility.yul\":2161:2192   */\n  mstore\n    /* \"#utility.yul\":2215:2219   */\n  0x22\n    /* \"#utility.yul\":2212:2213   */\n  0x04\n    /* \"#utility.yul\":2205:2220   */\n  mstore\n    /* \"#utility.yul\":2243:2247   */\n  0x24\n    /* \"#utility.yul\":2240:2241   */\n  0x00\n    /* \"#utility.yul\":2233:2248   */\n  revert\n    /* \"#utility.yul\":2097:2258   */\ntag_67:\n  pop\n    /* \"#utility.yul\":1884:2264   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_38:\n    /* \"contracts/HatToken.sol\":257:9297  contract HatToken is Context, IBEP20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HatToken.sol\":257:9297  contract HatToken is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1aef8058\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HatToken.sol\":1452:1537  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HatToken.sol\":2639:2793  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"contracts/HatToken.sol\":2639:2793  function approve(address spender, uint256 amount) external returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"contracts/HatToken.sol\":1601:1694  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n        /* \"contracts/HatToken.sol\":1674:1686  _totalSupply */\n      sload(0x05)\n        /* \"contracts/HatToken.sol\":1601:1694  function totalSupply() external view returns (uint256) {... */\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/HatToken.sol\":1601:1694  function totalSupply() external view returns (uint256) {... */\n      tag_26\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/HatToken.sol\":387:444  uint256 public constant DECIMAL_MULTIPLIER = 10**DECIMALS */\n    tag_6:\n      tag_34\n      tag_39\n      jump\t// in\n        /* \"contracts/HatToken.sol\":3264:3703  function transferFrom(... */\n    tag_7:\n      tag_28\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/HatToken.sol\":345:380  uint8 public constant DECIMALS = 18 */\n    tag_8:\n      tag_46\n        /* \"contracts/HatToken.sol\":378:380  18 */\n      0x12\n        /* \"contracts/HatToken.sol\":345:380  uint8 public constant DECIMALS = 18 */\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1932:1936   */\n      0xff\n        /* \"#utility.yul\":1920:1937   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"contracts/HatToken.sol\":345:380  uint8 public constant DECIMALS = 18 */\n      tag_26\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"contracts/HatToken.sol\":1151:1235  function decimals() external pure returns (uint8) {... */\n    tag_9:\n        /* \"contracts/HatToken.sol\":378:380  18 */\n      0x12\n        /* \"contracts/HatToken.sol\":1151:1235  function decimals() external pure returns (uint8) {... */\n      jump(tag_46)\n        /* \"contracts/HatToken.sol\":4111:4394  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_10:\n      tag_28\n      tag_54\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"contracts/HatToken.sol\":1756:1868  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_34\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":1842:1860  _balances[account] */\n      and\n        /* \"contracts/HatToken.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/HatToken.sol\":1842:1860  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":1842:1851  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":1842:1860  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/HatToken.sol\":1756:1868  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/HatToken.sol\":999:1084  function getOwner() external view returns (address) {... */\n    tag_13:\n        /* \"contracts/HatToken.sol\":1042:1049  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/HatToken.sol\":999:1084  function getOwner() external view returns (address) {... */\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2304:2336   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"contracts/HatToken.sol\":999:1084  function getOwner() external view returns (address) {... */\n      tag_26\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_64)\n        /* \"contracts/HatToken.sol\":1300:1389  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_24\n      tag_72\n      jump\t// in\n        /* \"contracts/HatToken.sol\":5497:5627  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_28\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/HatToken.sol\":4896:5279  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_17:\n      tag_28\n      tag_80\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/HatToken.sol\":2080:2263  function transfer(address recipient, uint256 amount)... */\n    tag_18:\n      tag_28\n      tag_84\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"contracts/HatToken.sol\":2325:2493  function allowance(address owner, address spender)... */\n    tag_19:\n      tag_34\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":2458:2476  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/HatToken.sol\":2426:2433  uint256 */\n      0x00\n        /* \"contracts/HatToken.sol\":2458:2476  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":2458:2469  _allowances */\n      0x02\n        /* \"contracts/HatToken.sol\":2458:2476  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/HatToken.sol\":2458:2485  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/HatToken.sol\":2325:2493  function allowance(address owner, address spender)... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_62\n      tag_93\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"contracts/HatToken.sol\":1452:1537  function name() external view returns (string memory) {... */\n    tag_25:\n        /* \"contracts/HatToken.sol\":1491:1504  string memory */\n      0x60\n        /* \"contracts/HatToken.sol\":1524:1529  _name */\n      0x03\n        /* \"contracts/HatToken.sol\":1517:1529  return _name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/HatToken.sol\":1452:1537  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/HatToken.sol\":2639:2793  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_31:\n        /* \"contracts/HatToken.sol\":2707:2711  bool */\n      0x00\n        /* \"contracts/HatToken.sol\":2724:2763  _approve(_msgSender(), spender, amount) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":2747:2754  spender */\n      dup5\n        /* \"contracts/HatToken.sol\":2756:2762  amount */\n      dup5\n        /* \"contracts/HatToken.sol\":2724:2732  _approve */\n      tag_106\n        /* \"contracts/HatToken.sol\":2724:2763  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/HatToken.sol\":2781:2785  true */\n      0x01\n        /* \"contracts/HatToken.sol\":2639:2793  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_102:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":387:444  uint256 public constant DECIMAL_MULTIPLIER = 10**DECIMALS */\n    tag_39:\n        /* \"contracts/HatToken.sol\":432:444  10**DECIMALS */\n      tag_108\n        /* \"contracts/HatToken.sol\":378:380  18 */\n      0x12\n        /* \"contracts/HatToken.sol\":432:434  10 */\n      0x0a\n        /* \"contracts/HatToken.sol\":432:444  10**DECIMALS */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"contracts/HatToken.sol\":387:444  uint256 public constant DECIMAL_MULTIPLIER = 10**DECIMALS */\n      dup2\n      jump\t// out\n        /* \"contracts/HatToken.sol\":3264:3703  function transferFrom(... */\n    tag_44:\n        /* \"contracts/HatToken.sol\":3389:3393  bool */\n      0x00\n        /* \"contracts/HatToken.sol\":3406:3442  _transfer(sender, recipient, amount) */\n      tag_111\n        /* \"contracts/HatToken.sol\":3416:3422  sender */\n      dup5\n        /* \"contracts/HatToken.sol\":3424:3433  recipient */\n      dup5\n        /* \"contracts/HatToken.sol\":3435:3441  amount */\n      dup5\n        /* \"contracts/HatToken.sol\":3406:3415  _transfer */\n      tag_112\n        /* \"contracts/HatToken.sol\":3406:3442  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/HatToken.sol\":3453:3673  _approve(... */\n      tag_113\n        /* \"contracts/HatToken.sol\":3476:3482  sender */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":3524:3662  _allowances[sender][_msgSender()].sub(... */\n      tag_115\n        /* \"contracts/HatToken.sol\":3580:3586  amount */\n      dup6\n        /* \"contracts/HatToken.sol\":3524:3662  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":3524:3543  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":3524:3535  _allowances */\n      0x02\n        /* \"contracts/HatToken.sol\":3524:3543  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":3524:3557  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/HatToken.sol\":3524:3561  _allowances[sender][_msgSender()].sub */\n      tag_117\n        /* \"contracts/HatToken.sol\":3524:3662  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_115:\n        /* \"contracts/HatToken.sol\":3453:3461  _approve */\n      tag_106\n        /* \"contracts/HatToken.sol\":3453:3673  _approve(... */\n      jump\t// in\n    tag_113:\n      pop\n        /* \"contracts/HatToken.sol\":3691:3695  true */\n      0x01\n        /* \"contracts/HatToken.sol\":3264:3703  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":4111:4394  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":4209:4213  bool */\n      0x00\n        /* \"contracts/HatToken.sol\":4303:4328  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":4303:4314  _allowances */\n      0x02\n        /* \"contracts/HatToken.sol\":4303:4328  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":4303:4337  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/HatToken.sol\":4209:4213  bool */\n      swap1\n      swap2\n        /* \"contracts/HatToken.sol\":4231:4364  _approve(... */\n      tag_103\n      swap2\n        /* \"contracts/HatToken.sol\":4281:4288  spender */\n      dup6\n      swap1\n        /* \"contracts/HatToken.sol\":4303:4353  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_115\n      swap1\n        /* \"contracts/HatToken.sol\":4342:4352  addedValue */\n      dup7\n        /* \"contracts/HatToken.sol\":4303:4341  _allowances[_msgSender()][spender].add */\n      tag_124\n        /* \"contracts/HatToken.sol\":4303:4353  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/HatToken.sol\":1300:1389  function symbol() external view returns (string memory) {... */\n    tag_72:\n        /* \"contracts/HatToken.sol\":1341:1354  string memory */\n      0x60\n        /* \"contracts/HatToken.sol\":1374:1381  _symbol */\n      0x04\n        /* \"contracts/HatToken.sol\":1367:1381  return _symbol */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n        /* \"contracts/HatToken.sol\":5497:5627  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_77:\n        /* \"contracts/HatToken.sol\":5553:5557  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_147:\n        /* \"contracts/HatToken.sol\":5570:5597  _mint(_msgSender(), amount) */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":5590:5596  amount */\n      dup4\n        /* \"contracts/HatToken.sol\":5570:5575  _mint */\n      tag_152\n        /* \"contracts/HatToken.sol\":5570:5597  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"contracts/HatToken.sol\":5615:5619  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1318:1319  _ */\n    tag_149:\n        /* \"contracts/HatToken.sol\":5497:5627  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":4896:5279  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_81:\n        /* \"contracts/HatToken.sol\":4999:5003  bool */\n      0x00\n        /* \"contracts/HatToken.sol\":5021:5249  _approve(... */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":5071:5078  spender */\n      dup5\n        /* \"contracts/HatToken.sol\":5093:5238  _allowances[_msgSender()][spender].sub(... */\n      tag_115\n        /* \"contracts/HatToken.sol\":5150:5165  subtractedValue */\n      dup6\n        /* \"contracts/HatToken.sol\":5093:5238  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":5093:5118  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":5093:5104  _allowances */\n      0x02\n        /* \"contracts/HatToken.sol\":5093:5118  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":5093:5127  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/HatToken.sol\":5093:5131  _allowances[_msgSender()][spender].sub */\n      tag_117\n        /* \"contracts/HatToken.sol\":5093:5238  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/HatToken.sol\":2080:2263  function transfer(address recipient, uint256 amount)... */\n    tag_85:\n        /* \"contracts/HatToken.sol\":2169:2173  bool */\n      0x00\n        /* \"contracts/HatToken.sol\":2191:2233  _transfer(_msgSender(), recipient, amount) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/HatToken.sol\":2215:2224  recipient */\n      dup5\n        /* \"contracts/HatToken.sol\":2226:2232  amount */\n      dup5\n        /* \"contracts/HatToken.sol\":2191:2200  _transfer */\n      tag_112\n        /* \"contracts/HatToken.sol\":2191:2233  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5261:5263   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5243:5264   */\n      mstore\n        /* \"#utility.yul\":5300:5302   */\n      0x26\n        /* \"#utility.yul\":5280:5298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5273:5303   */\n      mstore\n        /* \"#utility.yul\":5339:5373   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5319:5337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5312:5374   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5390:5408   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5383:5419   */\n      mstore\n        /* \"#utility.yul\":5436:5455   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_130\n        /* \"#utility.yul\":5059:5461   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":8405:8777  function _approve(... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":8533:8552  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/HatToken.sol\":8525:8593  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5668:5670   */\n      0x20\n        /* \"contracts/HatToken.sol\":8525:8593  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5650:5671   */\n      mstore\n        /* \"#utility.yul\":5707:5709   */\n      0x24\n        /* \"#utility.yul\":5687:5705   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5680:5710   */\n      mstore\n        /* \"#utility.yul\":5746:5780   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5726:5744   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5719:5781   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5797:5815   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5790:5824   */\n      mstore\n        /* \"#utility.yul\":5841:5860   */\n      0x84\n      add\n        /* \"contracts/HatToken.sol\":8525:8593  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":5466:5866   */\n      jump\n        /* \"contracts/HatToken.sol\":8525:8593  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":8612:8633  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/HatToken.sol\":8604:8672  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6073:6075   */\n      0x20\n        /* \"contracts/HatToken.sol\":8604:8672  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6055:6076   */\n      mstore\n        /* \"#utility.yul\":6112:6114   */\n      0x22\n        /* \"#utility.yul\":6092:6110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6085:6115   */\n      mstore\n        /* \"#utility.yul\":6151:6185   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":6131:6149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6124:6186   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":6202:6220   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6195:6227   */\n      mstore\n        /* \"#utility.yul\":6244:6263   */\n      0x84\n      add\n        /* \"contracts/HatToken.sol\":8604:8672  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":5871:6269   */\n      jump\n        /* \"contracts/HatToken.sol\":8604:8672  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":8685:8703  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":8685:8696  _allowances */\n      0x02\n        /* \"contracts/HatToken.sol\":8685:8703  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/HatToken.sol\":8685:8712  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/HatToken.sol\":8685:8721  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/HatToken.sol\":8737:8769  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":8737:8769  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/HatToken.sol\":8737:8769  Approval(owner, spender, amount) */\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/HatToken.sol\":8405:8777  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":6117:6659  function _transfer(... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":6249:6269  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/HatToken.sol\":6241:6311  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6476:6478   */\n      0x20\n        /* \"contracts/HatToken.sol\":6241:6311  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6458:6479   */\n      mstore\n        /* \"#utility.yul\":6515:6517   */\n      0x25\n        /* \"#utility.yul\":6495:6513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6488:6518   */\n      mstore\n        /* \"#utility.yul\":6554:6588   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6534:6552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6527:6589   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6605:6623   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6598:6633   */\n      mstore\n        /* \"#utility.yul\":6650:6669   */\n      0x84\n      add\n        /* \"contracts/HatToken.sol\":6241:6311  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":6274:6675   */\n      jump\n        /* \"contracts/HatToken.sol\":6241:6311  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":6330:6353  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/HatToken.sol\":6322:6393  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6882:6884   */\n      0x20\n        /* \"contracts/HatToken.sol\":6322:6393  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6864:6885   */\n      mstore\n        /* \"#utility.yul\":6921:6923   */\n      0x23\n        /* \"#utility.yul\":6901:6919   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6894:6924   */\n      mstore\n        /* \"#utility.yul\":6960:6994   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6940:6958   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6933:6995   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7011:7029   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7004:7037   */\n      mstore\n        /* \"#utility.yul\":7054:7073   */\n      0x84\n      add\n        /* \"contracts/HatToken.sol\":6322:6393  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":6680:7079   */\n      jump\n        /* \"contracts/HatToken.sol\":6322:6393  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_185:\n        /* \"contracts/HatToken.sol\":6426:6534  _balances[sender].sub(... */\n      tag_188\n        /* \"contracts/HatToken.sol\":6462:6468  amount */\n      dup2\n        /* \"contracts/HatToken.sol\":6426:6534  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":6426:6443  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":6426:6435  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":6426:6443  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/HatToken.sol\":6426:6534  _balances[sender].sub(... */\n      swap1\n        /* \"contracts/HatToken.sol\":6426:6447  _balances[sender].sub */\n      tag_117\n        /* \"contracts/HatToken.sol\":6426:6534  _balances[sender].sub(... */\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":6406:6423  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":6406:6415  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":6406:6423  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/HatToken.sol\":6406:6534  _balances[sender] = _balances[sender].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/HatToken.sol\":6568:6588  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/HatToken.sol\":6568:6600  _balances[recipient].add(amount) */\n      tag_189\n      swap1\n        /* \"contracts/HatToken.sol\":6593:6599  amount */\n      dup3\n        /* \"contracts/HatToken.sol\":6568:6592  _balances[recipient].add */\n      tag_124\n        /* \"contracts/HatToken.sol\":6568:6600  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":6545:6565  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":6545:6554  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":6545:6565  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/HatToken.sol\":6545:6600  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/HatToken.sol\":6616:6651  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_180\n      swap1\n        /* \"contracts/HatToken.sol\":6644:6650  amount */\n      dup6\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5061:5068  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5120:5132  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5118  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5133  require(b <= a, errorMessage) */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_192:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5159  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_195\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/HatToken.sol\":6940:7248  function _mint(address account, uint256 amount) internal {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":7016:7037  account != address(0) */\n      dup3\n      and\n        /* \"contracts/HatToken.sol\":7008:7073  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7419:7421   */\n      0x20\n        /* \"contracts/HatToken.sol\":7008:7073  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7401:7422   */\n      mstore\n        /* \"#utility.yul\":7458:7460   */\n      0x1f\n        /* \"#utility.yul\":7438:7456   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7431:7461   */\n      mstore\n        /* \"#utility.yul\":7497:7530   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7477:7495   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7470:7531   */\n      mstore\n        /* \"#utility.yul\":7548:7566   */\n      0x64\n      add\n        /* \"contracts/HatToken.sol\":7008:7073  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":7217:7572   */\n      jump\n        /* \"contracts/HatToken.sol\":7008:7073  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_199:\n        /* \"contracts/HatToken.sol\":7101:7113  _totalSupply */\n      sload(0x05)\n        /* \"contracts/HatToken.sol\":7101:7125  _totalSupply.add(amount) */\n      tag_202\n      swap1\n        /* \"contracts/HatToken.sol\":7118:7124  amount */\n      dup3\n        /* \"contracts/HatToken.sol\":7101:7117  _totalSupply.add */\n      tag_124\n        /* \"contracts/HatToken.sol\":7101:7125  _totalSupply.add(amount) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/HatToken.sol\":7086:7098  _totalSupply */\n      0x05\n        /* \"contracts/HatToken.sol\":7086:7125  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":7157:7175  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":7157:7166  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":7157:7175  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/HatToken.sol\":7157:7187  _balances[account].add(amount) */\n      tag_203\n      swap1\n        /* \"contracts/HatToken.sol\":7180:7186  amount */\n      dup3\n        /* \"contracts/HatToken.sol\":7157:7179  _balances[account].add */\n      tag_124\n        /* \"contracts/HatToken.sol\":7157:7187  _balances[account].add(amount) */\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/HatToken.sol\":7136:7154  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/HatToken.sol\":7136:7145  _balances */\n      0x01\n        /* \"contracts/HatToken.sol\":7136:7154  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/HatToken.sol\":7136:7187  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/HatToken.sol\":7203:7240  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"contracts/HatToken.sol\":7136:7154  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/HatToken.sol\":7203:7240  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_204\n      swap1\n        /* \"contracts/HatToken.sol\":7233:7239  amount */\n      dup6\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/HatToken.sol\":7203:7240  Transfer(address(0), account, amount) */\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/HatToken.sol\":6940:7248  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_27:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_211:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_211)\n    tag_213:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_214:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_205:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":794:1048   */\n    tag_30:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_218:\n        /* \"#utility.yul\":962:991   */\n      tag_219\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_205\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_43:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_223:\n        /* \"#utility.yul\":1612:1641   */\n      tag_224\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_205\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_225\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_205\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_59:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_228:\n        /* \"#utility.yul\":2100:2129   */\n      tag_195\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_205\n      jump\t// in\n        /* \"#utility.yul\":2348:2528   */\n    tag_76:\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2448:2457   */\n      dup3\n        /* \"#utility.yul\":2439:2446   */\n      dup5\n        /* \"#utility.yul\":2435:2458   */\n      sub\n        /* \"#utility.yul\":2431:2463   */\n      slt\n        /* \"#utility.yul\":2428:2480   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2476:2477   */\n      0x00\n        /* \"#utility.yul\":2473:2474   */\n      dup1\n        /* \"#utility.yul\":2466:2478   */\n      revert\n        /* \"#utility.yul\":2428:2480   */\n    tag_232:\n      pop\n        /* \"#utility.yul\":2499:2522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2348:2528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2533:2793   */\n    tag_89:\n        /* \"#utility.yul\":2601:2607   */\n      0x00\n        /* \"#utility.yul\":2609:2615   */\n      dup1\n        /* \"#utility.yul\":2662:2664   */\n      0x40\n        /* \"#utility.yul\":2650:2659   */\n      dup4\n        /* \"#utility.yul\":2641:2648   */\n      dup6\n        /* \"#utility.yul\":2637:2660   */\n      sub\n        /* \"#utility.yul\":2633:2665   */\n      slt\n        /* \"#utility.yul\":2630:2682   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2630:2682   */\n    tag_234:\n        /* \"#utility.yul\":2701:2730   */\n      tag_235\n        /* \"#utility.yul\":2720:2729   */\n      dup4\n        /* \"#utility.yul\":2701:2730   */\n      tag_205\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2691:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2749:2787   */\n      tag_236\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2772:2781   */\n      dup5\n        /* \"#utility.yul\":2768:2786   */\n      add\n        /* \"#utility.yul\":2749:2787   */\n      tag_205\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2739:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2533:2793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:3178   */\n    tag_97:\n        /* \"#utility.yul\":2877:2878   */\n      0x01\n        /* \"#utility.yul\":2873:2885   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2920:2932   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2941:3002   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2995:2999   */\n      0x7f\n        /* \"#utility.yul\":2987:2993   */\n      dup3\n        /* \"#utility.yul\":2983:3000   */\n      and\n        /* \"#utility.yul\":2973:3000   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3002   */\n    tag_238:\n        /* \"#utility.yul\":3048:3050   */\n      0x20\n        /* \"#utility.yul\":3040:3046   */\n      dup3\n        /* \"#utility.yul\":3037:3051   */\n      lt\n        /* \"#utility.yul\":3017:3035   */\n      dup2\n        /* \"#utility.yul\":3014:3052   */\n      eq\n        /* \"#utility.yul\":3011:3172   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3094:3104   */\n      0x4e487b71\n        /* \"#utility.yul\":3089:3092   */\n      0xe0\n        /* \"#utility.yul\":3085:3105   */\n      shl\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3075:3106   */\n      mstore\n        /* \"#utility.yul\":3129:3133   */\n      0x22\n        /* \"#utility.yul\":3126:3127   */\n      0x04\n        /* \"#utility.yul\":3119:3134   */\n      mstore\n        /* \"#utility.yul\":3157:3161   */\n      0x24\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3147:3162   */\n      revert\n        /* \"#utility.yul\":3011:3172   */\n    tag_239:\n      pop\n        /* \"#utility.yul\":2798:3178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3310   */\n    tag_206:\n        /* \"#utility.yul\":3244:3254   */\n      0x4e487b71\n        /* \"#utility.yul\":3239:3242   */\n      0xe0\n        /* \"#utility.yul\":3235:3255   */\n      shl\n        /* \"#utility.yul\":3232:3233   */\n      0x00\n        /* \"#utility.yul\":3225:3256   */\n      mstore\n        /* \"#utility.yul\":3275:3279   */\n      0x11\n        /* \"#utility.yul\":3272:3273   */\n      0x04\n        /* \"#utility.yul\":3265:3280   */\n      mstore\n        /* \"#utility.yul\":3299:3303   */\n      0x24\n        /* \"#utility.yul\":3296:3297   */\n      0x00\n        /* \"#utility.yul\":3289:3304   */\n      revert\n        /* \"#utility.yul\":3315:3737   */\n    tag_207:\n        /* \"#utility.yul\":3404:3405   */\n      0x01\n        /* \"#utility.yul\":3447:3452   */\n      dup2\n        /* \"#utility.yul\":3404:3405   */\n      dup2\n        /* \"#utility.yul\":3461:3731   */\n    tag_242:\n        /* \"#utility.yul\":3482:3489   */\n      dup1\n        /* \"#utility.yul\":3472:3480   */\n      dup6\n        /* \"#utility.yul\":3469:3490   */\n      gt\n        /* \"#utility.yul\":3461:3731   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":3541:3545   */\n      dup2\n        /* \"#utility.yul\":3537:3538   */\n      0x00\n        /* \"#utility.yul\":3533:3539   */\n      not\n        /* \"#utility.yul\":3529:3546   */\n      div\n        /* \"#utility.yul\":3523:3527   */\n      dup3\n        /* \"#utility.yul\":3520:3547   */\n      gt\n        /* \"#utility.yul\":3517:3570   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":3550:3568   */\n      tag_246\n      tag_206\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3600:3607   */\n      dup1\n        /* \"#utility.yul\":3590:3598   */\n      dup6\n        /* \"#utility.yul\":3586:3608   */\n      and\n        /* \"#utility.yul\":3583:3638   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3620:3636   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":3583:3638   */\n    tag_247:\n        /* \"#utility.yul\":3699:3721   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":3659:3674   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":3461:3731   */\n      jump(tag_242)\n    tag_244:\n        /* \"#utility.yul\":3465:3468   */\n      pop\n        /* \"#utility.yul\":3315:3737   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3742:4548   */\n    tag_208:\n        /* \"#utility.yul\":3791:3796   */\n      0x00\n        /* \"#utility.yul\":3821:3829   */\n      dup3\n        /* \"#utility.yul\":3811:3891   */\n      tag_249\n      jumpi\n      pop\n        /* \"#utility.yul\":3862:3863   */\n      0x01\n        /* \"#utility.yul\":3876:3881   */\n      jump(tag_102)\n        /* \"#utility.yul\":3811:3891   */\n    tag_249:\n        /* \"#utility.yul\":3910:3914   */\n      dup2\n        /* \"#utility.yul\":3900:3976   */\n      tag_250\n      jumpi\n      pop\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3961:3966   */\n      jump(tag_102)\n        /* \"#utility.yul\":3900:3976   */\n    tag_250:\n        /* \"#utility.yul\":3992:3996   */\n      dup2\n        /* \"#utility.yul\":4010:4011   */\n      0x01\n        /* \"#utility.yul\":4005:4064   */\n      dup2\n      eq\n      tag_252\n      jumpi\n        /* \"#utility.yul\":4078:4079   */\n      0x02\n        /* \"#utility.yul\":4073:4203   */\n      dup2\n      eq\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3985:4203   */\n      jump(tag_251)\n        /* \"#utility.yul\":4005:4064   */\n    tag_252:\n        /* \"#utility.yul\":4035:4036   */\n      0x01\n        /* \"#utility.yul\":4026:4036   */\n      swap2\n      pop\n        /* \"#utility.yul\":4049:4054   */\n      pop\n      jump(tag_102)\n        /* \"#utility.yul\":4073:4203   */\n    tag_253:\n        /* \"#utility.yul\":4110:4113   */\n      0xff\n        /* \"#utility.yul\":4100:4108   */\n      dup5\n        /* \"#utility.yul\":4097:4114   */\n      gt\n        /* \"#utility.yul\":4094:4137   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":4117:4135   */\n      tag_255\n      tag_206\n      jump\t// in\n    tag_255:\n      pop\n      pop\n        /* \"#utility.yul\":4173:4174   */\n      0x01\n        /* \"#utility.yul\":4159:4175   */\n      dup3\n      shl\n        /* \"#utility.yul\":4188:4193   */\n      jump(tag_102)\n        /* \"#utility.yul\":3985:4203   */\n    tag_251:\n      pop\n        /* \"#utility.yul\":4287:4289   */\n      0x20\n        /* \"#utility.yul\":4277:4285   */\n      dup4\n        /* \"#utility.yul\":4274:4290   */\n      lt\n        /* \"#utility.yul\":4268:4271   */\n      0x0133\n        /* \"#utility.yul\":4262:4266   */\n      dup4\n        /* \"#utility.yul\":4259:4272   */\n      lt\n        /* \"#utility.yul\":4255:4291   */\n      and\n        /* \"#utility.yul\":4249:4251   */\n      0x4e\n        /* \"#utility.yul\":4239:4247   */\n      dup5\n        /* \"#utility.yul\":4236:4252   */\n      lt\n        /* \"#utility.yul\":4231:4233   */\n      0x0b\n        /* \"#utility.yul\":4225:4229   */\n      dup5\n        /* \"#utility.yul\":4222:4234   */\n      lt\n        /* \"#utility.yul\":4218:4253   */\n      and\n        /* \"#utility.yul\":4215:4292   */\n      or\n        /* \"#utility.yul\":4212:4371   */\n      iszero\n      tag_256\n      jumpi\n      pop\n        /* \"#utility.yul\":4324:4343   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":4356:4361   */\n      jump(tag_102)\n        /* \"#utility.yul\":4212:4371   */\n    tag_256:\n        /* \"#utility.yul\":4403:4437   */\n      tag_257\n        /* \"#utility.yul\":4428:4436   */\n      dup4\n        /* \"#utility.yul\":4422:4426   */\n      dup4\n        /* \"#utility.yul\":4403:4437   */\n      tag_207\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4473:4479   */\n      dup1\n        /* \"#utility.yul\":4469:4470   */\n      0x00\n        /* \"#utility.yul\":4465:4471   */\n      not\n        /* \"#utility.yul\":4461:4480   */\n      div\n        /* \"#utility.yul\":4452:4459   */\n      dup3\n        /* \"#utility.yul\":4449:4481   */\n      gt\n        /* \"#utility.yul\":4446:4504   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":4484:4502   */\n      tag_259\n      tag_206\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4522:4542   */\n      mul\n      swap4\n        /* \"#utility.yul\":3742:4548   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4553:4693   */\n    tag_109:\n        /* \"#utility.yul\":4611:4616   */\n      0x00\n        /* \"#utility.yul\":4640:4687   */\n      tag_195\n        /* \"#utility.yul\":4681:4685   */\n      0xff\n        /* \"#utility.yul\":4671:4679   */\n      dup5\n        /* \"#utility.yul\":4667:4686   */\n      and\n        /* \"#utility.yul\":4661:4665   */\n      dup4\n        /* \"#utility.yul\":4640:4687   */\n      tag_208\n      jump\t// in\n        /* \"#utility.yul\":4698:5054   */\n    tag_131:\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4882:4903   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4919:4937   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4912:4942   */\n      mstore\n        /* \"#utility.yul\":4978:5012   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4973:4975   */\n      0x40\n        /* \"#utility.yul\":4958:4976   */\n      dup3\n      add\n        /* \"#utility.yul\":4951:5013   */\n      mstore\n        /* \"#utility.yul\":5045:5047   */\n      0x60\n        /* \"#utility.yul\":5030:5048   */\n      add\n      swap1\n        /* \"#utility.yul\":4698:5054   */\n      jump\t// out\n        /* \"#utility.yul\":7084:7212   */\n    tag_196:\n        /* \"#utility.yul\":7124:7127   */\n      0x00\n        /* \"#utility.yul\":7155:7156   */\n      dup3\n        /* \"#utility.yul\":7151:7157   */\n      not\n        /* \"#utility.yul\":7148:7149   */\n      dup3\n        /* \"#utility.yul\":7145:7158   */\n      gt\n        /* \"#utility.yul\":7142:7181   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":7161:7179   */\n      tag_270\n      tag_206\n      jump\t// in\n    tag_270:\n      pop\n        /* \"#utility.yul\":7197:7206   */\n      add\n      swap1\n        /* \"#utility.yul\":7084:7212   */\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212204e5c57c12ded88d1b8cc4cd4f2999f9e5c4c1cdcd1a75a825178ee0f5ae0494b64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_515": {
									"entryPoint": null,
									"id": 515,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 246,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2266:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:5",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:5",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:5",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:5"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:5"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:5"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:5"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:5"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:5"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:5"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:5"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:5"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:5",
																"statements": []
															},
															"src": "292:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:5",
														"type": ""
													}
												],
												"src": "146:422:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:5"
															},
															"nodeType": "YulIf",
															"src": "642:80:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:5"
															},
															"nodeType": "YulIf",
															"src": "731:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:5",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:5"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:5"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:5"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:5"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:5"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:5"
															},
															"nodeType": "YulIf",
															"src": "1043:159:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:5"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:5"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:5"
															},
															"nodeType": "YulIf",
															"src": "1277:58:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:5"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:5",
														"type": ""
													}
												],
												"src": "573:806:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:72:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1462:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1492:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1502:8:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1471:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1462:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1423:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1429:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1442:5:5",
														"type": ""
													}
												],
												"src": "1384:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1640:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1642:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1642:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1612:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1605:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1605:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1620:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1631:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1627:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1627:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1635:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1623:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1623:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:45:5"
															},
															"nodeType": "YulIf",
															"src": "1591:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1686:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1689:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1560:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1563:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1569:7:5",
														"type": ""
													}
												],
												"src": "1529:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1813:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1825:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1836:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1821:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1813:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1866:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1848:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1772:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1783:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1794:4:5",
														"type": ""
													}
												],
												"src": "1702:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1949:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1966:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1980:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2010:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1984:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2057:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2059:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2073:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2081:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2069:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2069:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2059:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2037:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2030:26:5"
															},
															"nodeType": "YulIf",
															"src": "2027:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2147:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2175:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2180:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2171:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2171:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2215:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2205:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2205:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2240:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2233:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2233:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2103:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2126:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2134:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2123:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2100:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:38:5"
															},
															"nodeType": "YulIf",
															"src": "2097:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1919:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1928:6:5",
														"type": ""
													}
												],
												"src": "1884:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506200001d33620000f6565b604080518082019091526011808252702432b9379020bbb0b5b2b7102a37b5b2b760791b6020909201918252620000579160039162000146565b506040805180820190915260038082526212105560ea1b6020909201918252620000849160049162000146565b50620000936012600a62000301565b620000a390633b9aca0062000319565b600581905533600081815260016020908152604080832085905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a362000378565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805462000154906200033b565b90600052602060002090601f016020900481019282620001785760008555620001c3565b82601f106200019357805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c3578251825591602001919060010190620001a6565b50620001d1929150620001d5565b5090565b5b80821115620001d15760008155600101620001d6565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000243578160001904821115620002275762000227620001ec565b808516156200023557918102915b93841c939080029062000207565b509250929050565b6000826200025c57506001620002fb565b816200026b57506000620002fb565b81600181146200028457600281146200028f57620002af565b6001915050620002fb565b60ff841115620002a357620002a3620001ec565b50506001821b620002fb565b5060208310610133831016604e8410600b8410161715620002d4575081810a620002fb565b620002e0838362000202565b8060001904821115620002f757620002f7620001ec565b0290505b92915050565b60006200031260ff8416836200024b565b9392505050565b6000816000190483118215151615620003365762000336620001ec565b500290565b600181811c908216806200035057607f821691505b602082108114156200037257634e487b7160e01b600052602260045260246000fd5b50919050565b610d2080620003886000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a0712d6811610071578063a0712d681461022e578063a457c2d714610241578063a9059cbb14610254578063dd62ed3e14610267578063f2fde38b146102a057600080fd5b8063715018a6146101e6578063893d20e8146101f05780638da5cb5b1461021557806395d89b411461022657600080fd5b806323b872dd116100e957806323b872dd146101765780632e0f262514610189578063313ce567146101a357806339509351146101aa57806370a08231146101bd57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c5780631aef80581461016e575b600080fd5b6101236102b3565b60405161013091906109ad565b60405180910390f35b61014c610147366004610a19565b610345565b6040519015158152602001610130565b6005545b604051908152602001610130565b61016061035c565b61014c610184366004610a43565b61036b565b610191601281565b60405160ff9091168152602001610130565b6012610191565b61014c6101b8366004610a19565b6103d4565b6101606101cb366004610a7f565b6001600160a01b031660009081526001602052604090205490565b6101ee61040a565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6000546001600160a01b03166101fd565b610123610449565b61014c61023c366004610a9a565b610458565b61014c61024f366004610a19565b610496565b61014c610262366004610a19565b6104e5565b610160610275366004610ab3565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101ee6102ae366004610a7f565b6104f2565b6060600380546102c290610ae6565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee90610ae6565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b5050505050905090565b600061035233848461058d565b5060015b92915050565b6103686012600a610c1b565b81565b60006103788484846106b2565b6103ca84336103c585604051806060016040528060288152602001610c78602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610838565b61058d565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103529185906103c59086610864565b6000546001600160a01b0316331461043d5760405162461bcd60e51b815260040161043490610c2a565b60405180910390fd5b6104476000610877565b565b6060600480546102c290610ae6565b600080546001600160a01b031633146104835760405162461bcd60e51b815260040161043490610c2a565b61048d33836108c7565b5060015b919050565b600061035233846103c585604051806060016040528060258152602001610cc6602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610838565b60006103523384846106b2565b6000546001600160a01b0316331461051c5760405162461bcd60e51b815260040161043490610c2a565b6001600160a01b0381166105815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610434565b61058a81610877565b50565b6001600160a01b0383166105ef5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610434565b6001600160a01b0382166106505760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610434565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107165760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610434565b6001600160a01b0382166107785760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610434565b6107b581604051806060016040528060268152602001610ca0602691396001600160a01b0386166000908152600160205260409020549190610838565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107e49082610864565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106a59085815260200190565b6000818484111561085c5760405162461bcd60e51b815260040161043491906109ad565b505050900390565b60006108708284610c5f565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610434565b60055461092a9082610864565b6005556001600160a01b0382166000908152600160205260409020546109509082610864565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600060208083528351808285015260005b818110156109da578581018301518582016040015282016109be565b818111156109ec576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461049157600080fd5b60008060408385031215610a2c57600080fd5b610a3583610a02565b946020939093013593505050565b600080600060608486031215610a5857600080fd5b610a6184610a02565b9250610a6f60208501610a02565b9150604084013590509250925092565b600060208284031215610a9157600080fd5b61087082610a02565b600060208284031215610aac57600080fd5b5035919050565b60008060408385031215610ac657600080fd5b610acf83610a02565b9150610add60208401610a02565b90509250929050565b600181811c90821680610afa57607f821691505b60208210811415610b1b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610b72578160001904821115610b5857610b58610b21565b80851615610b6557918102915b93841c9390800290610b3c565b509250929050565b600082610b8957506001610356565b81610b9657506000610356565b8160018114610bac5760028114610bb657610bd2565b6001915050610356565b60ff841115610bc757610bc7610b21565b50506001821b610356565b5060208310610133831016604e8410600b8410161715610bf5575081810a610356565b610bff8383610b37565b8060001904821115610c1357610c13610b21565b029392505050565b600061087060ff841683610b7a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610c7257610c72610b21565b50019056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204e5c57c12ded88d1b8cc4cd4f2999f9e5c4c1cdcd1a75a825178ee0f5ae0494b64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1D CALLER PUSH3 0xF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP1 DUP3 MSTORE PUSH17 0x2432B9379020BBB0B5B2B7102A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x57 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x146 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x121055 PUSH1 0xEA SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x84 SWAP2 PUSH1 0x4 SWAP2 PUSH3 0x146 JUMP JUMPDEST POP PUSH3 0x93 PUSH1 0x12 PUSH1 0xA PUSH3 0x301 JUMP JUMPDEST PUSH3 0xA3 SWAP1 PUSH4 0x3B9ACA00 PUSH3 0x319 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x378 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x154 SWAP1 PUSH3 0x33B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x178 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1C3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x193 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1C3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1C3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1C3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP PUSH3 0x1D1 SWAP3 SWAP2 POP PUSH3 0x1D5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x243 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x227 PUSH3 0x1EC JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x235 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x207 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x25C JUMPI POP PUSH1 0x1 PUSH3 0x2FB JUMP JUMPDEST DUP2 PUSH3 0x26B JUMPI POP PUSH1 0x0 PUSH3 0x2FB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x28F JUMPI PUSH3 0x2AF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x2FB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x2A3 JUMPI PUSH3 0x2A3 PUSH3 0x1EC JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x2FB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x2D4 JUMPI POP DUP2 DUP2 EXP PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x2E0 DUP4 DUP4 PUSH3 0x202 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x2F7 JUMPI PUSH3 0x2F7 PUSH3 0x1EC JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x312 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x24B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x336 JUMPI PUSH3 0x336 PUSH3 0x1EC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x350 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x372 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD20 DUP1 PUSH3 0x388 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1AEF8058 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x14C PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH2 0x191 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x123 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE SWAP1 PUSH2 0xAE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x310 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 DUP5 PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x368 PUSH1 0x12 PUSH1 0xA PUSH2 0xC1B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP5 DUP5 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3CA DUP5 CALLER PUSH2 0x3C5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC78 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x352 SWAP2 DUP6 SWAP1 PUSH2 0x3C5 SWAP1 DUP7 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 PUSH1 0x0 PUSH2 0x877 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x48D CALLER DUP4 PUSH2 0x8C7 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 PUSH2 0x3C5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 DUP5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x58A DUP2 PUSH2 0x877 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x7B5 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7E4 SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x6A5 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP3 DUP5 PUSH2 0xC5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x92A SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x950 SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9A1 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9DA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA35 DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP5 PUSH2 0xA02 JUMP JUMPDEST SWAP3 POP PUSH2 0xA6F PUSH1 0x20 DUP6 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x870 DUP3 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACF DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH2 0xADD PUSH1 0x20 DUP5 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xB72 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0xB21 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xB65 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xB3C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB89 JUMPI POP PUSH1 0x1 PUSH2 0x356 JUMP JUMPDEST DUP2 PUSH2 0xB96 JUMPI POP PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x356 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0xB21 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x356 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBF5 JUMPI POP DUP2 DUP2 EXP PUSH2 0x356 JUMP JUMPDEST PUSH2 0xBFF DUP4 DUP4 PUSH2 0xB37 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC13 PUSH2 0xB21 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0xB21 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0x4E 0x5C JUMPI 0xC1 0x2D 0xED DUP9 0xD1 0xB8 0xCC 0x4C 0xD4 CALLCODE SWAP10 SWAP16 SWAP15 0x5C 0x4C SHR 0xDC 0xD1 0xA7 GAS DUP3 MLOAD PUSH25 0xEE0F5AE0494B64736F6C634300080B00330000000000000000 ",
							"sourceMap": "257:9040:3:-:0;;;674:257;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;699:27:3;;;;;;;;;;;;;-1:-1:-1;;;699:27:3;;;;;;;;;:5;;:27;:::i;:::-;-1:-1:-1;737:15:3;;;;;;;;;;;;;-1:-1:-1;;;737:15:3;;;;;;;;;:7;;:15;:::i;:::-;-1:-1:-1;432:12:3;378:2;432;:12;:::i;:::-;780:28;;781:5;780:28;:::i;:::-;765:12;:43;;;719:10:1;819:23:3;;;;:9;:23;;;;;;;;:38;;;875:48;1848:25:5;;;719:10:1;;819:23:3;;875:48;;1821:18:5;875:48:3;;;;;;;257:9040;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;257:9040:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;257:9040:3;;;-1:-1:-1;257:9040:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:5;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:5;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:5;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:5;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:5;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:5:o;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:5;;1529:168::o;1884:380::-;1963:1;1959:12;;;;2006;;;2027:61;;2081:4;2073:6;2069:17;2059:27;;2027:61;2134:2;2126:6;2123:14;2103:18;2100:38;2097:161;;;2180:10;2175:3;2171:20;2168:1;2161:31;2215:4;2212:1;2205:15;2243:4;2240:1;2233:15;2097:161;;1884:380;;;:::o;:::-;257:9040:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_456": {
									"entryPoint": null,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DECIMAL_MULTIPLIER_461": {
									"entryPoint": 860,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_942": {
									"entryPoint": 1421,
									"id": 942,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_850": {
									"entryPoint": 2247,
									"id": 850,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 2167,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_804": {
									"entryPoint": 1714,
									"id": 804,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_302": {
									"entryPoint": 2148,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_611": {
									"entryPoint": null,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_631": {
									"entryPoint": 837,
									"id": 631,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_725": {
									"entryPoint": 1174,
									"id": 725,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_525": {
									"entryPoint": null,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_696": {
									"entryPoint": 980,
									"id": 696,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_744": {
									"entryPoint": 1112,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_552": {
									"entryPoint": 691,
									"id": 552,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1034,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_387": {
									"entryPoint": 2104,
									"id": 387,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_543": {
									"entryPoint": 1097,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_561": {
									"entryPoint": null,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_668": {
									"entryPoint": 875,
									"id": 668,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 1266,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_594": {
									"entryPoint": 1253,
									"id": 594,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7574:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:5"
															},
															"nodeType": "YulIf",
															"src": "443:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:5"
															},
															"nodeType": "YulIf",
															"src": "713:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:5",
														"type": ""
													}
												],
												"src": "616:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:5"
															},
															"nodeType": "YulIf",
															"src": "891:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:5",
														"type": ""
													}
												],
												"src": "794:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:5",
														"type": ""
													}
												],
												"src": "1053:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:5",
														"type": ""
													}
												],
												"src": "1245:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:5"
															},
															"nodeType": "YulIf",
															"src": "1541:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:5",
														"type": ""
													}
												],
												"src": "1427:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:5",
														"type": ""
													}
												],
												"src": "1760:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:5"
															},
															"nodeType": "YulIf",
															"src": "2029:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:5",
														"type": ""
													}
												],
												"src": "1949:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:5",
														"type": ""
													}
												],
												"src": "2140:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2418:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2464:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2473:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2476:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2466:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2466:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2466:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2439:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2448:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:32:5"
															},
															"nodeType": "YulIf",
															"src": "2428:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2489:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2499:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2384:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2395:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2407:6:5",
														"type": ""
													}
												],
												"src": "2348:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:32:5"
															},
															"nodeType": "YulIf",
															"src": "2630:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2701:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2739:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2749:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2589:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2601:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2609:6:5",
														"type": ""
													}
												],
												"src": "2533:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2853:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2863:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2880:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2894:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2924:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2898:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2971:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2973:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2987:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2995:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2983:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2951:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:26:5"
															},
															"nodeType": "YulIf",
															"src": "2941:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3061:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3094:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3085:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3085:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3075:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3129:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3119:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3147:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3017:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3040:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3048:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3037:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3037:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3014:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:38:5"
															},
															"nodeType": "YulIf",
															"src": "3011:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2833:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2842:6:5",
														"type": ""
													}
												],
												"src": "2798:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3239:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3235:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3225:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3275:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3265:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3265:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3296:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3299:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3289:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3289:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3183:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:358:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3389:16:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3404:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3393:7:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3414:16:5",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3423:7:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3414:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3439:13:5",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3447:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3439:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3503:228:5",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3548:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3550:16:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3550:18:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3550:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3523:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3537:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3533:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3533:6:5"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3541:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3529:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3529:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3520:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3520:27:5"
																		},
																		"nodeType": "YulIf",
																		"src": "3517:53:5"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3609:29:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3611:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3624:5:5"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3631:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3620:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3620:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3611:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3590:8:5"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3600:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3586:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3586:22:5"
																		},
																		"nodeType": "YulIf",
																		"src": "3583:55:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3651:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3663:4:5"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3669:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3659:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3659:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3651:4:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3687:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3703:7:5"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3712:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3699:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3699:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3687:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3472:8:5"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3482:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3469:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:21:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3491:3:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3465:3:5",
																"statements": []
															},
															"src": "3461:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3343:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3350:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3363:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3370:4:5",
														"type": ""
													}
												],
												"src": "3315:422:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:747:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3839:52:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3853:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3862:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3853:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3876:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3821:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3814:16:5"
															},
															"nodeType": "YulIf",
															"src": "3811:80:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3924:52:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3938:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3947:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3961:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3910:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:12:5"
															},
															"nodeType": "YulIf",
															"src": "3900:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4012:52:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4026:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4035:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4026:5:5"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4049:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4005:59:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4080:123:5",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4115:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4117:16:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4117:18:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4117:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4100:8:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4110:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "4097:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4097:17:5"
																				},
																				"nodeType": "YulIf",
																				"src": "4094:43:5"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4150:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4163:8:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4173:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4159:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4159:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4150:5:5"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4188:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4073:130:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4078:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3992:4:5"
															},
															"nodeType": "YulSwitch",
															"src": "3985:218:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4301:70:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4315:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4328:4:5"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4334:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4324:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4324:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4315:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4356:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4225:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4231:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4222:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4222:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4239:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4249:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4236:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4236:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4218:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4218:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4262:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4268:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4259:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4259:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4277:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4287:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4274:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4274:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4255:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4215:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:77:5"
															},
															"nodeType": "YulIf",
															"src": "4212:159:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4380:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4422:4:5"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4428:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4403:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4384:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4393:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4482:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4484:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4484:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4452:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4469:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4465:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4465:6:5"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4473:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4449:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:32:5"
															},
															"nodeType": "YulIf",
															"src": "4446:58:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4513:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4526:7:5"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4513:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3772:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3778:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3791:5:5",
														"type": ""
													}
												],
												"src": "3742:806:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4621:72:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4631:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4661:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4671:8:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4681:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4667:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4640:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4631:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4592:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4598:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4611:5:5",
														"type": ""
													}
												],
												"src": "4553:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4872:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4882:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4923:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4934:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4919:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4919:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4912:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4962:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4973:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4958:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4978:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4951:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5022:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5034:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5045:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5030:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5030:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5022:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4849:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4863:4:5",
														"type": ""
													}
												],
												"src": "4698:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5233:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5250:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5261:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5243:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5295:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5280:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5273:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5323:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5334:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5339:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5312:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5394:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5405:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5410:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5383:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5428:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5440:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5428:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5210:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5224:4:5",
														"type": ""
													}
												],
												"src": "5059:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5657:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5668:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5650:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5691:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5702:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5687:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5707:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5680:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5680:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5730:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5741:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5726:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5746:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5801:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5812:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5797:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5797:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5817:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5790:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5833:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5845:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5856:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5841:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5841:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5833:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5617:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5631:4:5",
														"type": ""
													}
												],
												"src": "5466:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6045:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6062:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6055:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6096:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6092:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6112:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6135:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6146:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6131:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6151:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6124:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6124:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6206:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6217:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6222:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6195:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6236:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6259:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6236:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6022:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6036:4:5",
														"type": ""
													}
												],
												"src": "5871:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6448:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6465:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6476:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6458:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6458:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6458:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6499:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6510:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6495:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6515:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6488:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6538:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6549:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6534:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6554:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6527:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6527:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6609:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6620:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6605:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6605:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6625:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6598:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6642:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6654:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6642:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6425:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6439:4:5",
														"type": ""
													}
												],
												"src": "6274:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6854:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6864:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6916:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6921:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6894:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6894:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6944:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6955:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6940:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6940:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6960:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6933:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7015:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7026:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7011:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7031:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7046:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7058:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7069:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7054:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7046:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6831:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6845:4:5",
														"type": ""
													}
												],
												"src": "6680:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7132:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7159:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7161:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7161:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7161:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7148:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7155:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7151:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7145:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:13:5"
															},
															"nodeType": "YulIf",
															"src": "7142:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7190:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7201:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7204:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7197:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7115:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7118:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7124:3:5",
														"type": ""
													}
												],
												"src": "7084:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7391:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7408:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7419:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7442:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7453:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7458:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7431:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7431:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7431:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7481:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7492:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7477:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7477:18:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7497:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7470:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7540:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7552:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7563:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7548:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7540:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7368:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7382:4:5",
														"type": ""
													}
												],
												"src": "7217:355:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a0712d6811610071578063a0712d681461022e578063a457c2d714610241578063a9059cbb14610254578063dd62ed3e14610267578063f2fde38b146102a057600080fd5b8063715018a6146101e6578063893d20e8146101f05780638da5cb5b1461021557806395d89b411461022657600080fd5b806323b872dd116100e957806323b872dd146101765780632e0f262514610189578063313ce567146101a357806339509351146101aa57806370a08231146101bd57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c5780631aef80581461016e575b600080fd5b6101236102b3565b60405161013091906109ad565b60405180910390f35b61014c610147366004610a19565b610345565b6040519015158152602001610130565b6005545b604051908152602001610130565b61016061035c565b61014c610184366004610a43565b61036b565b610191601281565b60405160ff9091168152602001610130565b6012610191565b61014c6101b8366004610a19565b6103d4565b6101606101cb366004610a7f565b6001600160a01b031660009081526001602052604090205490565b6101ee61040a565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6000546001600160a01b03166101fd565b610123610449565b61014c61023c366004610a9a565b610458565b61014c61024f366004610a19565b610496565b61014c610262366004610a19565b6104e5565b610160610275366004610ab3565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101ee6102ae366004610a7f565b6104f2565b6060600380546102c290610ae6565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee90610ae6565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b5050505050905090565b600061035233848461058d565b5060015b92915050565b6103686012600a610c1b565b81565b60006103788484846106b2565b6103ca84336103c585604051806060016040528060288152602001610c78602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610838565b61058d565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103529185906103c59086610864565b6000546001600160a01b0316331461043d5760405162461bcd60e51b815260040161043490610c2a565b60405180910390fd5b6104476000610877565b565b6060600480546102c290610ae6565b600080546001600160a01b031633146104835760405162461bcd60e51b815260040161043490610c2a565b61048d33836108c7565b5060015b919050565b600061035233846103c585604051806060016040528060258152602001610cc6602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610838565b60006103523384846106b2565b6000546001600160a01b0316331461051c5760405162461bcd60e51b815260040161043490610c2a565b6001600160a01b0381166105815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610434565b61058a81610877565b50565b6001600160a01b0383166105ef5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610434565b6001600160a01b0382166106505760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610434565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107165760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610434565b6001600160a01b0382166107785760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610434565b6107b581604051806060016040528060268152602001610ca0602691396001600160a01b0386166000908152600160205260409020549190610838565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107e49082610864565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106a59085815260200190565b6000818484111561085c5760405162461bcd60e51b815260040161043491906109ad565b505050900390565b60006108708284610c5f565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610434565b60055461092a9082610864565b6005556001600160a01b0382166000908152600160205260409020546109509082610864565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600060208083528351808285015260005b818110156109da578581018301518582016040015282016109be565b818111156109ec576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461049157600080fd5b60008060408385031215610a2c57600080fd5b610a3583610a02565b946020939093013593505050565b600080600060608486031215610a5857600080fd5b610a6184610a02565b9250610a6f60208501610a02565b9150604084013590509250925092565b600060208284031215610a9157600080fd5b61087082610a02565b600060208284031215610aac57600080fd5b5035919050565b60008060408385031215610ac657600080fd5b610acf83610a02565b9150610add60208401610a02565b90509250929050565b600181811c90821680610afa57607f821691505b60208210811415610b1b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610b72578160001904821115610b5857610b58610b21565b80851615610b6557918102915b93841c9390800290610b3c565b509250929050565b600082610b8957506001610356565b81610b9657506000610356565b8160018114610bac5760028114610bb657610bd2565b6001915050610356565b60ff841115610bc757610bc7610b21565b50506001821b610356565b5060208310610133831016604e8410600b8410161715610bf5575081810a610356565b610bff8383610b37565b8060001904821115610c1357610c13610b21565b029392505050565b600061087060ff841683610b7a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610c7257610c72610b21565b50019056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204e5c57c12ded88d1b8cc4cd4f2999f9e5c4c1cdcd1a75a825178ee0f5ae0494b64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1AEF8058 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x14C PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH2 0x191 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x191 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x123 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE SWAP1 PUSH2 0xAE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x310 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 DUP5 PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x368 PUSH1 0x12 PUSH1 0xA PUSH2 0xC1B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP5 DUP5 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3CA DUP5 CALLER PUSH2 0x3C5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC78 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x352 SWAP2 DUP6 SWAP1 PUSH2 0x3C5 SWAP1 DUP7 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 PUSH1 0x0 PUSH2 0x877 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C2 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x48D CALLER DUP4 PUSH2 0x8C7 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 PUSH2 0x3C5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 CALLER DUP5 DUP5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x58A DUP2 PUSH2 0x877 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x7B5 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7E4 SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x6A5 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 DUP3 DUP5 PUSH2 0xC5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x434 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x92A SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x950 SWAP1 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9A1 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9DA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA35 DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP5 PUSH2 0xA02 JUMP JUMPDEST SWAP3 POP PUSH2 0xA6F PUSH1 0x20 DUP6 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x870 DUP3 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACF DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH2 0xADD PUSH1 0x20 DUP5 ADD PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xB72 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0xB21 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xB65 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xB3C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB89 JUMPI POP PUSH1 0x1 PUSH2 0x356 JUMP JUMPDEST DUP2 PUSH2 0xB96 JUMPI POP PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBAC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x356 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0xB21 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x356 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBF5 JUMPI POP DUP2 DUP2 EXP PUSH2 0x356 JUMP JUMPDEST PUSH2 0xBFF DUP4 DUP4 PUSH2 0xB37 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC13 PUSH2 0xB21 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0xB21 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0x4E 0x5C JUMPI 0xC1 0x2D 0xED DUP9 0xD1 0xB8 0xCC 0x4C 0xD4 CALLCODE SWAP10 SWAP16 SWAP15 0x5C 0x4C SHR 0xDC 0xD1 0xA7 GAS DUP3 MLOAD PUSH25 0xEE0F5AE0494B64736F6C634300080B00330000000000000000 ",
							"sourceMap": "257:9040:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2639:154;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;2639:154:3;1053:187:5;1601:93:3;1674:12;;1601:93;;;1391:25:5;;;1379:2;1364:18;1601:93:3;1245:177:5;387:57:3;;;:::i;3264:439::-;;;;;;:::i;:::-;;:::i;345:35::-;;378:2;345:35;;;;;1932:4:5;1920:17;;;1902:36;;1890:2;1875:18;345:35:3;1760:184:5;1151:84:3;378:2;1151:84;;4111:283;;;;;;:::i;:::-;;:::i;1756:112::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1842:18:3;1815:7;1842:18;;;:9;:18;;;;;;;1756:112;1668:101:0;;;:::i;:::-;;999:85:3;1042:7;1108:6:0;-1:-1:-1;;;;;1108:6:0;999:85:3;;;-1:-1:-1;;;;;2304:32:5;;;2286:51;;2274:2;2259:18;999:85:3;2140:203:5;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1300:89:3;;;:::i;5497:130::-;;;;;;:::i;:::-;;:::i;4896:383::-;;;;;;:::i;:::-;;:::i;2080:183::-;;;;;;:::i;:::-;;:::i;2325:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2458:18:3;;;2426:7;2458:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2325:168;1918:198:0;;;;;;:::i;:::-;;:::i;1452:85:3:-;1491:13;1524:5;1517:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:85;:::o;2639:154::-;2707:4;2724:39;719:10:1;2747:7:3;2756:6;2724:8;:39::i;:::-;-1:-1:-1;2781:4:3;2639:154;;;;;:::o;387:57::-;432:12;378:2;432;:12;:::i;:::-;387:57;:::o;3264:439::-;3389:4;3406:36;3416:6;3424:9;3435:6;3406:9;:36::i;:::-;3453:220;3476:6;719:10:1;3524:138:3;3580:6;3524:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3524:19:3;;;;;;:11;:19;;;;;;;;719:10:1;3524:33:3;;;;;;;;;;:37;:138::i;:::-;3453:8;:220::i;:::-;-1:-1:-1;3691:4:3;3264:439;;;;;:::o;4111:283::-;719:10:1;4209:4:3;4303:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4303:34:3;;;;;;;;;;4209:4;;4231:133;;4281:7;;4303:50;;4342:10;4303:38;:50::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1300:89:3:-;1341:13;1374:7;1367:14;;;;;:::i;5497:130::-;5553:4;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5570:27:3::1;719:10:1::0;5590:6:3::1;5570:5;:27::i;:::-;-1:-1:-1::0;5615:4:3::1;1318:1:0;5497:130:3::0;;;:::o;4896:383::-;4999:4;5021:228;719:10:1;5071:7:3;5093:145;5150:15;5093:145;;;;;;;;;;;;;;;;;719:10:1;5093:25:3;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5093:34:3;;;;;;;;;;;;:38;:145::i;2080:183::-;2169:4;2191:42;719:10:1;2215:9:3;2226:6;2191:9;:42::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5261:2:5;1998:73:0::1;::::0;::::1;5243:21:5::0;5300:2;5280:18;;;5273:30;5339:34;5319:18;;;5312:62;-1:-1:-1;;;5390:18:5;;;5383:36;5436:19;;1998:73:0::1;5059:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;8405:372:3:-;-1:-1:-1;;;;;8533:19:3;;8525:68;;;;-1:-1:-1;;;8525:68:3;;5668:2:5;8525:68:3;;;5650:21:5;5707:2;5687:18;;;5680:30;5746:34;5726:18;;;5719:62;-1:-1:-1;;;5797:18:5;;;5790:34;5841:19;;8525:68:3;5466:400:5;8525:68:3;-1:-1:-1;;;;;8612:21:3;;8604:68;;;;-1:-1:-1;;;8604:68:3;;6073:2:5;8604:68:3;;;6055:21:5;6112:2;6092:18;;;6085:30;6151:34;6131:18;;;6124:62;-1:-1:-1;;;6202:18:5;;;6195:32;6244:19;;8604:68:3;5871:398:5;8604:68:3;-1:-1:-1;;;;;8685:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;8737:32;;1391:25:5;;;8737:32:3;;1364:18:5;8737:32:3;;;;;;;;8405:372;;;:::o;6117:542::-;-1:-1:-1;;;;;6249:20:3;;6241:70;;;;-1:-1:-1;;;6241:70:3;;6476:2:5;6241:70:3;;;6458:21:5;6515:2;6495:18;;;6488:30;6554:34;6534:18;;;6527:62;-1:-1:-1;;;6605:18:5;;;6598:35;6650:19;;6241:70:3;6274:401:5;6241:70:3;-1:-1:-1;;;;;6330:23:3;;6322:71;;;;-1:-1:-1;;;6322:71:3;;6882:2:5;6322:71:3;;;6864:21:5;6921:2;6901:18;;;6894:30;6960:34;6940:18;;;6933:62;-1:-1:-1;;;7011:18:5;;;7004:33;7054:19;;6322:71:3;6680:399:5;6322:71:3;6426:108;6462:6;6426:108;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6426:17:3;;;;;;:9;:17;;;;;;;:108;:21;:108::i;:::-;-1:-1:-1;;;;;6406:17:3;;;;;;;:9;:17;;;;;;:128;;;;6568:20;;;;;;;:32;;6593:6;6568:24;:32::i;:::-;-1:-1:-1;;;;;6545:20:3;;;;;;;:9;:20;;;;;;;:55;;;;6616:35;;;;;;;;;;6644:6;1391:25:5;;1379:2;1364:18;;1245:177;4945:231:2;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:2;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:2;;;4945:231::o;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:2:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;6940:308:3:-;-1:-1:-1;;;;;7016:21:3;;7008:65;;;;-1:-1:-1;;;7008:65:3;;7419:2:5;7008:65:3;;;7401:21:5;7458:2;7438:18;;;7431:30;7497:33;7477:18;;;7470:61;7548:18;;7008:65:3;7217:355:5;7008:65:3;7101:12;;:24;;7118:6;7101:16;:24::i;:::-;7086:12;:39;-1:-1:-1;;;;;7157:18:3;;;;;;:9;:18;;;;;;:30;;7180:6;7157:22;:30::i;:::-;-1:-1:-1;;;;;7136:18:3;;;;;;:9;:18;;;;;;:51;;;;7203:37;;7136:18;;;7203:37;;;;7233:6;1391:25:5;;1379:2;1364:18;;1245:177;7203:37:3;;;;;;;;6940:308;;:::o;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;794:254;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;2348:180::-;2407:6;2460:2;2448:9;2439:7;2435:23;2431:32;2428:52;;;2476:1;2473;2466:12;2428:52;-1:-1:-1;2499:23:5;;2348:180;-1:-1:-1;2348:180:5:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:127::-;3244:10;3239:3;3235:20;3232:1;3225:31;3275:4;3272:1;3265:15;3299:4;3296:1;3289:15;3315:422;3404:1;3447:5;3404:1;3461:270;3482:7;3472:8;3469:21;3461:270;;;3541:4;3537:1;3533:6;3529:17;3523:4;3520:27;3517:53;;;3550:18;;:::i;:::-;3600:7;3590:8;3586:22;3583:55;;;3620:16;;;;3583:55;3699:22;;;;3659:15;;;;3461:270;;;3465:3;3315:422;;;;;:::o;3742:806::-;3791:5;3821:8;3811:80;;-1:-1:-1;3862:1:5;3876:5;;3811:80;3910:4;3900:76;;-1:-1:-1;3947:1:5;3961:5;;3900:76;3992:4;4010:1;4005:59;;;;4078:1;4073:130;;;;3985:218;;4005:59;4035:1;4026:10;;4049:5;;;4073:130;4110:3;4100:8;4097:17;4094:43;;;4117:18;;:::i;:::-;-1:-1:-1;;4173:1:5;4159:16;;4188:5;;3985:218;;4287:2;4277:8;4274:16;4268:3;4262:4;4259:13;4255:36;4249:2;4239:8;4236:16;4231:2;4225:4;4222:12;4218:35;4215:77;4212:159;;;-1:-1:-1;4324:19:5;;;4356:5;;4212:159;4403:34;4428:8;4422:4;4403:34;:::i;:::-;4473:6;4469:1;4465:6;4461:19;4452:7;4449:32;4446:58;;;4484:18;;:::i;:::-;4522:20;;3742:806;-1:-1:-1;;;3742:806:5:o;4553:140::-;4611:5;4640:47;4681:4;4671:8;4667:19;4661:4;4640:47;:::i;4698:356::-;4900:2;4882:21;;;4919:18;;;4912:30;4978:34;4973:2;4958:18;;4951:62;5045:2;5030:18;;4698:356::o;7084:128::-;7124:3;7155:1;7151:6;7148:1;7145:13;7142:39;;;7161:18;;:::i;:::-;-1:-1:-1;7197:9:5;;7084:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "672000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "249",
								"DECIMAL_MULTIPLIER()": "624",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24644",
								"balanceOf(address)": "2648",
								"decimals()": "268",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2365",
								"increaseAllowance(address,uint256)": "27067",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 931,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 931,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 674,
									"end": 931,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 931,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 699,
									"end": 726,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2432B9379020BBB0B5B2B7102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 699,
									"end": 726,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 699,
									"end": 704,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 699,
									"end": 704,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 699,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 699,
									"end": 726,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 737,
									"end": 752,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "121055"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 737,
									"end": 752,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 737,
									"end": 744,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 737,
									"end": 744,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 737,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 737,
									"end": 752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 432,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 378,
									"end": 380,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 432,
									"end": 434,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 432,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 432,
									"end": 444,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 432,
									"end": 444,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 432,
									"end": 444,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 780,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 780,
									"end": 808,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 781,
									"end": 786,
									"name": "PUSH",
									"source": 3,
									"value": "3B9ACA00"
								},
								{
									"begin": 780,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 780,
									"end": 808,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 780,
									"end": 808,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 780,
									"end": 808,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 765,
									"end": 777,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 765,
									"end": 808,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 765,
									"end": 808,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 765,
									"end": 808,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 819,
									"end": 842,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 842,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 819,
									"end": 828,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 819,
									"end": 842,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 819,
									"end": 842,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 842,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 819,
									"end": 857,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 819,
									"end": 857,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 819,
									"end": 857,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1848,
									"end": 1873,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1848,
									"end": 1873,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1848,
									"end": 1873,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 819,
									"end": 842,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 819,
									"end": 842,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 875,
									"end": 923,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 875,
									"end": 923,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 923,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 875,
									"end": 923,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 5,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1447,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1512,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1502,
									"end": 1510,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1498,
									"end": 1517,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1496,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1462,
									"end": 1518,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1569,
									"end": 1576,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1632,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1637,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1617,
									"end": 1638,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1612,
									"end": 1613,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1614,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1598,
									"end": 1615,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1594,
									"end": 1639,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1959,
									"end": 1971,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1971,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1971,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1971,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2018,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2018,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2018,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2027,
									"end": 2088,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2085,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2073,
									"end": 2079,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2059,
									"end": 2086,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2059,
									"end": 2086,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2088,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2027,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 2136,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2123,
									"end": 2137,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2121,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2100,
									"end": 2138,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2180,
									"end": 2190,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 2175,
									"end": 2178,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 2171,
									"end": 2191,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2168,
									"end": 2169,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2161,
									"end": 2192,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2215,
									"end": 2219,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2212,
									"end": 2213,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2205,
									"end": 2220,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2243,
									"end": 2247,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2240,
									"end": 2241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2248,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2097,
									"end": 2258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1884,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 9297,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e5c57c12ded88d1b8cc4cd4f2999f9e5c4c1cdcd1a75a825178ee0f5ae0494b64736f6c634300080b0033",
									".code": [
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "A0712D68"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "A0712D68"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "893D20E8"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "2E0F2625"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "1AEF8058"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 257,
											"end": 9297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1674,
											"end": 1686,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 387,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 387,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 444,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 345,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 345,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 345,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 345,
											"end": 380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 345,
											"end": 380,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 345,
											"end": 380,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 345,
											"end": 380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 345,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1151,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1151,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1151,
											"end": 1235,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1868,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2724,
											"end": 2763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 2763,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2724,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2785,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2793,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 387,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 432,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 432,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 432,
											"end": 444,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 432,
											"end": 444,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 432,
											"end": 444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3406,
											"end": 3442,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3442,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3406,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH data",
											"source": 3,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3524,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3453,
											"end": 3673,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3453,
											"end": 3673,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3453,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3703,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4111,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4337,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4231,
											"end": 4364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4303,
											"end": 4353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4342,
											"end": 4352,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4303,
											"end": 4353,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1300,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5596,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5570,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5570,
											"end": 5597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5570,
											"end": 5597,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5570,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5619,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5627,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4896,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5078,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5150,
											"end": 5165,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH data",
											"source": 3,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5104,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5093,
											"end": 5238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2080,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2191,
											"end": 2233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5302,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5373,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5436,
											"end": 5455,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5436,
											"end": 5455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5059,
											"end": 5461,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5670,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5841,
											"end": 5860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5466,
											"end": 5866,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 8525,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8612,
											"end": 8633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8612,
											"end": 8633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6185,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 6131,
											"end": 6149,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6131,
											"end": 6149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6124,
											"end": 6186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6227,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5871,
											"end": 6269,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8604,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8696,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8703,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8712,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8721,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8721,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8769,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8777,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6117,
											"end": 6659,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6117,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6476,
											"end": 6478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6458,
											"end": 6479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6495,
											"end": 6513,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6495,
											"end": 6513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6488,
											"end": 6518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6588,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6527,
											"end": 6589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6274,
											"end": 6675,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6241,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6330,
											"end": 6353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6353,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6940,
											"end": 6958,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6940,
											"end": 6958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 6995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7004,
											"end": 7037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7054,
											"end": 7073,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7054,
											"end": 7073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6680,
											"end": 7079,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6322,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH data",
											"source": 3,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6435,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6426,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6423,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6534,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6534,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6534,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6568,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6568,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6565,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6600,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6616,
											"end": 6651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6940,
											"end": 7248,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6940,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7016,
											"end": 7037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7419,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7401,
											"end": 7422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7460,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7497,
											"end": 7530,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7531,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7217,
											"end": 7572,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 7008,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7101,
											"end": 7113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7101,
											"end": 7125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7101,
											"end": 7125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7101,
											"end": 7125,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7101,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7086,
											"end": 7125,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7166,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7175,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7157,
											"end": 7187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7157,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7157,
											"end": 7187,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7187,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7157,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7187,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7187,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7187,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7239,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7240,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6940,
											"end": 7248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6940,
											"end": 7248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6940,
											"end": 7248,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2463,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2478,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2428,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2522,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2528,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3052,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3085,
											"end": 3105,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3162,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3310,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3183,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3304,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3447,
											"end": 3452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3480,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3547,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3517,
											"end": 3570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3607,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3590,
											"end": 3598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3638,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3583,
											"end": 3638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3638,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3583,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3461,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3737,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3742,
											"end": 4548,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3742,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3811,
											"end": 3891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3891,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3811,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3900,
											"end": 3976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3961,
											"end": 3966,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3976,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3900,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4079,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3985,
											"end": 4203,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4005,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4026,
											"end": 4036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4073,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4100,
											"end": 4108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4094,
											"end": 4137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4203,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3985,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4277,
											"end": 4285,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4290,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "PUSH",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4262,
											"end": 4266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4272,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4291,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 5,
											"value": "4E"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4233,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4234,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4215,
											"end": 4292,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4212,
											"end": 4371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4343,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4371,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4212,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4428,
											"end": 4436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4480,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4481,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4446,
											"end": 4504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4542,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4542,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 4548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 4548,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4553,
											"end": 4693,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4553,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4671,
											"end": 4679,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4665,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4640,
											"end": 4687,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4698,
											"end": 5054,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4698,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 5012,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4973,
											"end": 4975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5047,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 5054,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7084,
											"end": 7212,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7084,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7157,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7145,
											"end": 7158,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7181,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7142,
											"end": 7181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7212,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"DECIMAL_MULTIPLIER()": "1aef8058",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMAL_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HatToken.sol\":\"HatToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/HatToken.sol\":{\"keccak256\":\"0xdf2a63cb6920c1034756c8a4d08cb79407ef782c16b6b1461e1e9a348c7d8a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f8d0e479773fc4b5c47115ea7ee597607e670f4fa707675f0d0f815aae80c51\",\"dweb:/ipfs/QmcLy2HweaCKJRLM62u3LUEfVKDaQ3DtettVsHXGSaTeL1\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xc2560e16ff18bbc0b1f6ff3431ee502687bec7af1b93a6a7d46aa7ad448690fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07b91436be3ddf9c888cca0ba3e1f55409405fb7bb1949a6fdf2746769f129b6\",\"dweb:/ipfs/QmXzPWFDY1ooYbMQhZonz9iWEv1xoBnGcXX3Kjg5aExmUD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getOwner()": "893d20e8",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xc2560e16ff18bbc0b1f6ff3431ee502687bec7af1b93a6a7d46aa7ad448690fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07b91436be3ddf9c888cca0ba3e1f55409405fb7bb1949a6fdf2746769f129b6\",\"dweb:/ipfs/QmXzPWFDY1ooYbMQhZonz9iWEv1xoBnGcXX3Kjg5aExmUD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "SafeMath",
							"nameLocation": "475:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "702:140:2",
										"statements": [
											{
												"id": 159,
												"nodeType": "UncheckedBlock",
												"src": "712:124:2",
												"statements": [
													{
														"assignments": [
															142
														],
														"declarations": [
															{
																"constant": false,
																"id": 142,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 159,
																"src": "736:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "748:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "752:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 148,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "775:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 154,
														"nodeType": "IfStatement",
														"src": "767:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 140,
															"id": 153,
															"nodeType": "Return",
															"src": "778:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 156,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "823:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 140,
														"id": 158,
														"nodeType": "Return",
														"src": "809:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "642:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "653:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:2"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "687:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:2"
									},
									"scope": 438,
									"src": "626:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1064:113:2",
										"statements": [
											{
												"id": 187,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1102:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1106:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 180,
														"nodeType": "IfStatement",
														"src": "1098:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 172,
															"id": 179,
															"nodeType": "Return",
															"src": "1109:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 182,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "1154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 183,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "1158:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 185,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 172,
														"id": 186,
														"nodeType": "Return",
														"src": "1140:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1004:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1015:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1049:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1055:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:2"
									},
									"scope": 438,
									"src": "988:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1401:417:2",
										"statements": [
											{
												"id": 229,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1669:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 208,
														"nodeType": "IfStatement",
														"src": "1665:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 207,
															"nodeType": "Return",
															"src": "1677:16:2"
														}
													},
													{
														"assignments": [
															210
														],
														"declarations": [
															{
																"constant": false,
																"id": 210,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 229,
																"src": "1707:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1719:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1723:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 215,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1742:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1746:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1751:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1738:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 223,
															"nodeType": "Return",
															"src": "1754:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1799:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 227,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 200,
														"id": 228,
														"nodeType": "Return",
														"src": "1785:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1341:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1352:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1386:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1392:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:2"
									},
									"scope": 438,
									"src": "1325:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2043:114:2",
										"statements": [
											{
												"id": 257,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2081:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "2077:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 242,
															"id": 249,
															"nodeType": "Return",
															"src": "2089:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 252,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2134:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 255,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 242,
														"id": 256,
														"nodeType": "Return",
														"src": "2120:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1994:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2028:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2034:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 438,
									"src": "1967:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2392:114:2",
										"statements": [
											{
												"id": 285,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2430:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 278,
														"nodeType": "IfStatement",
														"src": "2426:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 270,
															"id": 277,
															"nodeType": "Return",
															"src": "2438:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 280,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2483:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 281,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "2487:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 270,
														"id": 284,
														"nodeType": "Return",
														"src": "2469:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2332:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2343:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2383:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:2"
									},
									"scope": 438,
									"src": "2316:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2808:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2825:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2829:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "2818:12:2"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2754:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2765:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2799:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:2"
									},
									"scope": 438,
									"src": "2741:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3175:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "3192:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3196:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "3185:12:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3121:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3132:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3166:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:2"
									},
									"scope": 438,
									"src": "3108:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "3518:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3535:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3539:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "3528:12:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3464:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3475:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3509:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:2"
									},
									"scope": 438,
									"src": "3451:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3903:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3920:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3913:12:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3849:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3860:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3894:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:2"
									},
									"scope": 438,
									"src": "3836:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4452:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4469:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4473:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 360,
												"nodeType": "Return",
												"src": "4462:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4398:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4409:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4443:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:2"
									},
									"scope": 438,
									"src": "4385:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5070:106:2",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "5112:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5117:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 378,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5120:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 374,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 380,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5154:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "5158:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 373,
														"id": 384,
														"nodeType": "Return",
														"src": "5147:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4967:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4986:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5005:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5061:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:2"
									},
									"scope": 438,
									"src": "4945:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5785:105:2",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 400,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5827:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 403,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5834:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 399,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 405,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5868:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "5872:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 398,
														"id": 409,
														"nodeType": "Return",
														"src": "5861:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5682:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5701:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5720:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5776:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:2"
									},
									"scope": 438,
									"src": "5660:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "6661:105:2",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 425,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "6703:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 428,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6710:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 424,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "6744:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "6748:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 423,
														"id": 434,
														"nodeType": "Return",
														"src": "6737:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6558:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6577:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6596:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6652:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:2"
									},
									"scope": 438,
									"src": "6536:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 439,
							"src": "467:6301:2",
							"usedErrors": []
						}
					],
					"src": "92:6677:2"
				},
				"id": 2
			},
			"contracts/HatToken.sol": {
				"ast": {
					"absolutePath": "contracts/HatToken.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"HatToken": [
							973
						],
						"IBEP20": [
							1050
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							438
						]
					},
					"id": 974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 105,
							"src": "63:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 127,
							"src": "117:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 439,
							"src": "170:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 1051,
							"src": "231:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 445,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "278:7:3"
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "278:7:3"
								},
								{
									"baseName": {
										"id": 447,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "287:6:3"
									},
									"id": 448,
									"nodeType": "InheritanceSpecifier",
									"src": "287:6:3"
								},
								{
									"baseName": {
										"id": 449,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "295:7:3"
									},
									"id": 450,
									"nodeType": "InheritanceSpecifier",
									"src": "295:7:3"
								}
							],
							"canonicalName": "HatToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 973,
							"linearizedBaseContracts": [
								973,
								104,
								1050,
								126
							],
							"name": "HatToken",
							"nameLocation": "266:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 453,
									"libraryName": {
										"id": 451,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "316:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "310:27:3",
									"typeName": {
										"id": 452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 456,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "367:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "345:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 454,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "345:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1aef8058",
									"id": 461,
									"mutability": "constant",
									"name": "DECIMAL_MULTIPLIER",
									"nameLocation": "411:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "387:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "387:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 458,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "432:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"id": 459,
											"name": "DECIMALS",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 456,
											"src": "436:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "432:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 465,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "489:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "453:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 464,
										"keyType": {
											"id": 462,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "453:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 463,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "561:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "505:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 470,
										"keyType": {
											"id": 466,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "513:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "505:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 469,
											"keyType": {
												"id": 467,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "524:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 468,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "543:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 473,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "596:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "581:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 472,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "581:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 475,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "623:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "608:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 474,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "608:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 477,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "653:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "637:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "688:243:3",
										"statements": [
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "699:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4865726f204177616b656e20546f6b656e",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "707:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_083fa05e06546497fc0aac55fc259a514d61e8347339457e3df0406891c07d08",
															"typeString": "literal_string \"Hero Awaken Token\""
														},
														"value": "Hero Awaken Token"
													},
													"src": "699:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "699:27:3"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "737:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "484154",
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "747:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_2df863626e6467fc719aa5b7426c64dd9e768c031342317811bab47419a861ea",
															"typeString": "literal_string \"HAT\""
														},
														"value": "HAT"
													},
													"src": "737:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "737:15:3"
											},
											{
												"expression": {
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "765:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "781:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "39",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "785:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		},
																		"value": "9"
																	},
																	"src": "781:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	}
																}
															],
															"id": 492,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 493,
															"name": "DECIMAL_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "790:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "780:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "765:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "765:43:3"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 497,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "819:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 498,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "829:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "829:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "819:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "845:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "819:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "819:38:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "884:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "884:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "884:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 509,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "896:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "896:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "910:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "875:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "EmitStatement",
												"src": "870:53:3"
											}
										]
									},
									"id": 515,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:3"
									},
									"scope": 973,
									"src": "674:257:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1051:33:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 521,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1069:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1069:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 520,
												"id": 523,
												"nodeType": "Return",
												"src": "1062:14:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "939:54:3",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1008:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1042:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:9:3"
									},
									"scope": 973,
									"src": "999:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1201:34:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"name": "DECIMALS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "1219:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "1212:15:3"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1092:53:3",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1160:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:2:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1194:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1194:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:7:3"
									},
									"scope": 973,
									"src": "1151:84:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1356:33:3",
										"statements": [
											{
												"expression": {
													"id": 540,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 475,
													"src": "1374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 539,
												"id": 541,
												"nodeType": "Return",
												"src": "1367:14:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1243:51:3",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1309:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:2:3"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1341:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 537,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1341:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:15:3"
									},
									"scope": 973,
									"src": "1300:89:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "1506:31:3",
										"statements": [
											{
												"expression": {
													"id": 549,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "1524:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 548,
												"id": 550,
												"nodeType": "Return",
												"src": "1517:12:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "1397:49:3",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1461:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:2:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1491:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1491:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:15:3"
									},
									"scope": 973,
									"src": "1452:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "1656:38:3",
										"statements": [
											{
												"expression": {
													"id": 558,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 477,
													"src": "1674:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 559,
												"nodeType": "Return",
												"src": "1667:19:3"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "1545:50:3",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1610:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:2:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1647:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:9:3"
									},
									"scope": 973,
									"src": "1601:93:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "1824:44:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 569,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "1842:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 571,
													"indexExpression": {
														"id": 570,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1852:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1842:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 568,
												"id": 572,
												"nodeType": "Return",
												"src": "1835:25:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1702:48:3",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1765:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1783:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1775:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:17:3"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1815:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:3"
									},
									"scope": 973,
									"src": "1756:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2180:83:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2201:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2201:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2215:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "2226:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2191:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2191:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2251:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 583,
												"id": 592,
												"nodeType": "Return",
												"src": "2244:11:3"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "1876:198:3",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2089:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2106:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2098:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2125:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2117:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:35:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2169:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2169:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:6:3"
									},
									"scope": 973,
									"src": "2080:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "2440:53:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 604,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "2458:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 606,
														"indexExpression": {
															"id": 605,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "2470:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2458:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 608,
													"indexExpression": {
														"id": 607,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2477:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2458:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 609,
												"nodeType": "Return",
												"src": "2451:34:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2271:48:3",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2334:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2367:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:32:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2426:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:9:3"
									},
									"scope": 973,
									"src": "2325:168:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1019
									],
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "2713:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 622,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2733:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2733:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "2747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2756:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2724:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2724:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2724:39:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 620,
												"id": 629,
												"nodeType": "Return",
												"src": "2774:11:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "2501:132:3",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2648:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2681:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2673:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2673:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:33:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2707:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2707:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:6:3"
									},
									"scope": 973,
									"src": "2639:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1031
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "3395:308:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3416:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3424:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "3435:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "3406:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "3406:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3476:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3497:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3497:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 660,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "3580:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3605:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 653,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "3524:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 655,
																		"indexExpression": {
																			"id": 654,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "3536:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3524:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 658,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 656,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "3544:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3544:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3524:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 387,
																"src": "3524:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3524:138:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3453:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:220:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "3453:220:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3691:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 642,
												"id": 666,
												"nodeType": "Return",
												"src": "3684:11:3"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2801:457:3",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3273:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3304:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3296:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3329:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3321:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3357:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3349:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:85:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3389:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3389:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:6:3"
									},
									"scope": 973,
									"src": "3264:439:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "4220:174:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "4254:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4254:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "4281:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 689,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "4342:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 682,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "4303:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 685,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 683,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "4315:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4315:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4303:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 687,
																	"indexExpression": {
																		"id": 686,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "4329:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4303:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 302,
																"src": "4303:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4303:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "4231:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4231:133:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "4231:133:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4382:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 694,
												"nodeType": "Return",
												"src": "4375:11:3"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "3711:394:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4120:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4146:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "4138:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4163:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "4155:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4137:37:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "4209:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4209:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:6:3"
									},
									"scope": 973,
									"src": "4111:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5010:269:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 707,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5044:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5044:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5071:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 717,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "5150:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5184:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 710,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "5093:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 713,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 711,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "5105:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5105:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5093:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 715,
																	"indexExpression": {
																		"id": 714,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "5119:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5093:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 387,
																"src": "5093:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5093:145:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 706,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "5021:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5021:228:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5021:228:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 705,
												"id": 723,
												"nodeType": "Return",
												"src": "5260:11:3"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "4402:488:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4905:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4931:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4923:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4948:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4940:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4940:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4922:42:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "4999:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4999:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:6:3"
									},
									"scope": 973,
									"src": "4896:383:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "5559:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 736,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5576:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5576:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "5590:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "5570:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "5570:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5615:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 734,
												"id": 742,
												"nodeType": "Return",
												"src": "5608:11:3"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "5287:204:3",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5534:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5534:9:3"
										}
									],
									"name": "mint",
									"nameLocation": "5506:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "5511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5511:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5510:16:3"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "5553:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5553:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5552:6:3"
									},
									"scope": 973,
									"src": "5497:130:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "6230:429:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "6249:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6267:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6259:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6259:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6259:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6249:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6271:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6241:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6241:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6241:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "6330:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6351:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6343:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6343:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6343:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6330:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6355:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6322:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6322:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "6322:71:3"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 774,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6406:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 776,
														"indexExpression": {
															"id": 775,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6416:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6406:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 781,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "6462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6483:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 777,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "6426:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 779,
																"indexExpression": {
																	"id": 778,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6436:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6426:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 387,
															"src": "6426:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6426:108:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6406:128:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "6406:128:3"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6545:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 788,
														"indexExpression": {
															"id": 787,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6555:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6545:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 793,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "6593:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 789,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "6568:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 791,
																"indexExpression": {
																	"id": 790,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "6578:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6568:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "6568:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6568:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6545:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "6545:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 798,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6625:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6633:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "6644:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6616:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6616:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "EmitStatement",
												"src": "6611:40:3"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "5635:476:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6126:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6154:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6146:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6179:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6171:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6207:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6199:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6135:85:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6230:0:3"
									},
									"scope": 973,
									"src": "6117:542:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "6997:251:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 813,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7016:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7035:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7027:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 814,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7027:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7027:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7016:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7039:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7008:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7008:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "7008:65:3"
											},
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "7086:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 825,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "7118:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 823,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "7101:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "7101:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7101:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7086:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "7086:39:3"
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 829,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7136:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 831,
														"indexExpression": {
															"id": 830,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7146:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7136:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 836,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "7180:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 832,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "7157:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 834,
																"indexExpression": {
																	"id": 833,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "7167:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7157:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "7157:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7157:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7136:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "7136:51:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7220:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7212:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 841,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7212:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7212:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7224:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7233:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 840,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "7203:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7203:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "EmitStatement",
												"src": "7198:42:3"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "6667:267:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6949:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6963:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6955:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6955:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6980:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "6972:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6954:33:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6997:0:3"
									},
									"scope": 973,
									"src": "6940:308:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "7637:328:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 859,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "7656:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7675:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7667:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 860,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7667:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7667:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7656:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7679:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7648:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7648:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "7648:67:3"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 868,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7728:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 870,
														"indexExpression": {
															"id": 869,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "7738:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7728:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 875,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "7786:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7807:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 871,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "7749:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 873,
																"indexExpression": {
																	"id": 872,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "7759:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7749:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 387,
															"src": "7749:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7749:105:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7728:126:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "7728:126:3"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "7865:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 883,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "7897:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 881,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "7880:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "7880:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7880:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7865:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "7865:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 888,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "7929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7946:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7938:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 889,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7938:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7938:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "7950:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "7920:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7920:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "EmitStatement",
												"src": "7915:42:3"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "7256:318:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7589:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7603:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7595:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7620:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7612:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7594:33:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7637:0:3"
									},
									"scope": 973,
									"src": "7580:385:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "8514:263:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "8533:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8550:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 909,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8542:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8542:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8533:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8554:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8525:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8525:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "8525:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 918,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "8612:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8631:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8623:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 919,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8623:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8623:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8612:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8635:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8604:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8604:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "8604:68:3"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 927,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "8685:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 930,
															"indexExpression": {
																"id": 928,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "8697:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8685:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 931,
														"indexExpression": {
															"id": 929,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8704:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8685:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "8715:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8685:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "8685:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "8746:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8753:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "8762:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "8737:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8737:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "EmitStatement",
												"src": "8732:37:3"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "7973:426:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8414:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8441:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "8433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8433:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8465:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "8457:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8457:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8491:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "8483:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8422:82:3"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8514:0:3"
									},
									"scope": 973,
									"src": "8405:372:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "9024:270:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "9041:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "9050:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 950,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9035:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9035:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "9035:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "9091:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 957,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "9113:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9113:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 966,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "9197:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9222:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 959,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "9140:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 961,
																		"indexExpression": {
																			"id": 960,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 945,
																			"src": "9152:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9140:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 964,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 962,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "9161:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9161:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9140:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 387,
																"src": "9140:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9140:135:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "9068:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9068:218:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9068:218:3"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "8785:172:3",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "8972:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9007:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8981:33:3"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9024:0:3"
									},
									"scope": 973,
									"src": "8963:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 974,
							"src": "257:9040:3",
							"usedErrors": []
						}
					],
					"src": "35:9264:3"
				},
				"id": 3
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IBEP20",
							"nameLocation": "73:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "99:54:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "168:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:4"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "202:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:4"
									},
									"scope": 1050,
									"src": "159:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "219:74:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:17:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "358:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:9:4"
									},
									"scope": 1050,
									"src": "299:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "375:215:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "605:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "622:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "614:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "641:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "633:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:35:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "685:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "685:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:6:4"
									},
									"scope": 1050,
									"src": "596:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "699:270:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "984:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1002:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "994:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1018:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1010:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:33:4"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1077:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:4"
									},
									"scope": 1050,
									"src": "975:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "1094:655:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1764:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1780:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1772:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1797:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1789:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:33:4"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1823:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1823:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:6:4"
									},
									"scope": 1050,
									"src": "1755:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "1837:304:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2156:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2187:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2179:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2212:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2204:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2240:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2232:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:85:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:6:4"
									},
									"scope": 1050,
									"src": "2147:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "2286:163:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1040,
									"name": "Transfer",
									"nameLocation": "2461:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2470:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2492:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2512:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:4"
									},
									"src": "2455:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2535:151:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1049,
									"name": "Approval",
									"nameLocation": "2698:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2733:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2717:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2765:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2749:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2791:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2783:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:97:4"
									},
									"src": "2692:112:4"
								}
							],
							"scope": 1051,
							"src": "63:2744:4",
							"usedErrors": []
						}
					],
					"src": "35:2772:4"
				},
				"id": 4
			}
		}
	}
}